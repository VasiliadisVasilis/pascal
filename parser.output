State 195 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header declarations subprograms comp_statement DOT

    2 header: PROGRAM ID SEMI

    3 declarations: constdefs typedefs vardefs

    4 constdefs: CONST constant_defs SEMI
    5          | /* empty */

    6 constant_defs: constant_defs SEMI ID EQU expression
    7              | ID EQU expression

    8 expression: expression RELOP expression
    9           | expression EQU expression
   10           | expression INOP expression
   11           | expression OROP expression
   12           | expression ADDOP expression
   13           | expression MULDIVANDOP expression
   14           | ADDOP expression
   15           | NOTOP expression
   16           | variable
   17           | ID LPAREN expressions RPAREN
   18           | LENGTH LPAREN expression RPAREN
   19           | NEW LPAREN expression RPAREN
   20           | constant
   21           | LPAREN expression RPAREN
   22           | setlistexpression

   23 variable: ID
   24         | variable DOT ID
   25         | variable LBRACK expressions RBRACK
   26         | LISTFUNC LPAREN expression RPAREN

   27 expressions: expressions COMMA expression
   28            | expression

   29 constant: ICONST
   30         | RCONST
   31         | BCONST
   32         | CCONST

   33 setlistexpression: LBRACK expressions RBRACK
   34                  | LBRACK RBRACK

   35 typedefs: TYPE type_defs SEMI
   36         | /* empty */

   37 type_defs: type_defs SEMI ID EQU type_def
   38          | ID EQU type_def

   39 type_def: ARRAY LBRACK dims RBRACK OF typename
   40         | LIST OF typename
   41         | SET OF typename
   42         | RECORD fields END
   43         | limit DOTDOT limit

   44 dims: dims COMMA limits
   45     | limits

   46 limits: limit DOTDOT limit
   47       | ID

   48 limit: sign ICONST
   49      | CCONST
   50      | BCONST
   51      | ADDOP ID
   52      | ID

   53 sign: ADDOP
   54     | /* empty */

   55 typename: standard_type
   56         | ID

   57 standard_type: INTEGER
   58              | REAL
   59              | BOOLEAN
   60              | CHAR

   61 fields: fields SEMI field
   62       | field

   63 field: identifiers COLON typename

   64 identifiers: identifiers COMMA ID
   65            | ID

   66 vardefs: VAR variable_defs SEMI
   67        | /* empty */

   68 variable_defs: variable_defs SEMI identifiers COLON typename
   69              | identifiers COLON typename

   70 subprograms: subprograms subprogram SEMI
   71            | /* empty */

   72 subprogram: sub_header SEMI FORWARD

   73 $@1: /* empty */

   74 $@2: /* empty */

   75 subprogram: sub_header SEMI $@1 declarations $@2 subprograms comp_statement

   76 sub_header: FUNCTION ID formal_parameters COLON standard_type
   77           | FUNCTION ID formal_parameters COLON LIST
   78           | PROCEDURE ID formal_parameters
   79           | FUNCTION ID

   80 formal_parameters: LPAREN parameter_list RPAREN
   81                  | /* empty */

   82 parameter_list: parameter_list SEMI pass identifiers COLON typename
   83               | pass identifiers COLON typename

   84 pass: VAR
   85     | /* empty */

   86 comp_statement: T_BEGIN statements END

   87 statements: statements SEMI statement
   88           | statement

   89 statement: matched
   90          | unmatched

   91 matched: assignment
   92        | matched_if_statement
   93        | case_statement
   94        | while_statement
   95        | for_statement
   96        | with_statement
   97        | subprogram_call
   98        | io_statement
   99        | comp_statement
  100        | /* empty */

  101 matched_if_statement: IF expression THEN matched ELSE matched

  102 unmatched: IF expression THEN statement
  103          | IF expression THEN matched ELSE unmatched

  104 assignment: variable ASSIGN expression
  105           | variable ASSIGN STRING

  106 case_statement: CASE expression OF cases case_tail END

  107 cases: cases SEMI single_case
  108      | single_case

  109 single_case: label_list COLON statement
  110            | /* empty */

  111 label_list: label_list COMMA label
  112           | label

  113 label: sign constant
  114      | sign ID

  115 case_tail: SEMI OTHERWISE COLON statement
  116          | /* empty */

  117 while_statement: WHILE expression DO statement

  118 for_statement: FOR ID ASSIGN iter_space DO statement

  119 iter_space: expression TO expression
  120           | expression DOWNTO expression

  121 with_statement: WITH variable DO statement

  122 subprogram_call: ID
  123                | ID LPAREN expressions RPAREN

  124 io_statement: READ LPAREN read_list RPAREN
  125             | WRITE LPAREN write_list RPAREN

  126 read_list: read_list COMMA read_item
  127          | read_item

  128 read_item: variable

  129 write_list: write_list COMMA write_item
  130           | write_item

  131 write_item: expression
  132           | STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 2
CONST (259) 4
TYPE (260) 35
ARRAY (261) 39
LIST (262) 40 77
SET (263) 41
OF (264) 39 40 41 106
RECORD (265) 42
VAR (266) 66 84
FUNCTION (267) 76 77 79
PROCEDURE (268) 78
INTEGER (269) 57
REAL (270) 58
BOOLEAN (271) 59
CHAR (272) 60
FORWARD (273) 72
LENGTH (274) 18
NEW (275) 19
T_BEGIN (276) 86
END (277) 42 86 106
IF (278) 101 102 103
THEN (279) 101 102 103
ELSE (280) 101 103
WHILE (281) 117
DO (282) 117 118 121
CASE (283) 106
OTHERWISE (284) 115
FOR (285) 118
TO (286) 119
DOWNTO (287) 120
WITH (288) 121
READ (289) 124
WRITE (290) 125
LISTFUNC (291) 26
SEMI (292) 2 4 6 35 37 61 66 68 70 72 75 82 87 107 115
CCONST (293) 32 49
BCONST (294) 31 50
STRING (295) 105 132
RCONST (296) 30
ICONST (297) 29 48
ID (298) 2 6 7 17 23 24 37 38 47 51 52 56 64 65 76 77 78 79 114 118
    122 123
RBRACK (299) 25 33 34 39
RPAREN (300) 17 18 19 21 26 80 123 124 125
COMMA (301) 27 44 64 111 126 129
ASSIGN (302) 104 105 118
DOTDOT (303) 43 46
COLON (304) 63 68 69 76 77 82 83 109 115
LBRACK (305) 25 33 34 39
INOP (306) 10
RELOP (307) 8
EQU (308) 6 7 9 37 38
ADDOP (309) 12 14 51 53
OROP (310) 11
MULDIVANDOP (311) 13
NOTOP (312) 15
DOT (313) 1 24
LPAREN (314) 17 18 19 21 26 80 123 124 125


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
header (62)
    on left: 2, on right: 1
declarations (63)
    on left: 3, on right: 1 75
constdefs (64)
    on left: 4 5, on right: 3
constant_defs (65)
    on left: 6 7, on right: 4 6
expression (66)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22, on right:
    6 7 8 9 10 11 12 13 14 15 18 19 21 26 27 28 101 102 103 104 106
    117 119 120 131
variable (67)
    on left: 23 24 25 26, on right: 16 24 25 104 105 121 128
expressions (68)
    on left: 27 28, on right: 17 25 27 33 123
constant (69)
    on left: 29 30 31 32, on right: 20 113
setlistexpression (70)
    on left: 33 34, on right: 22
typedefs (71)
    on left: 35 36, on right: 3
type_defs (72)
    on left: 37 38, on right: 35 37
type_def (73)
    on left: 39 40 41 42 43, on right: 37 38
dims (74)
    on left: 44 45, on right: 39 44
limits (75)
    on left: 46 47, on right: 44 45
limit (76)
    on left: 48 49 50 51 52, on right: 43 46
sign (77)
    on left: 53 54, on right: 48 113 114
typename (78)
    on left: 55 56, on right: 39 40 41 63 68 69 82 83
standard_type (79)
    on left: 57 58 59 60, on right: 55 76
fields (80)
    on left: 61 62, on right: 42 61
field (81)
    on left: 63, on right: 61 62
identifiers (82)
    on left: 64 65, on right: 63 64 68 69 82 83
vardefs (83)
    on left: 66 67, on right: 3
variable_defs (84)
    on left: 68 69, on right: 66 68
subprograms (85)
    on left: 70 71, on right: 1 70 75
subprogram (86)
    on left: 72 75, on right: 70
$@1 (87)
    on left: 73, on right: 75
$@2 (88)
    on left: 74, on right: 75
sub_header (89)
    on left: 76 77 78 79, on right: 72 75
formal_parameters (90)
    on left: 80 81, on right: 76 77 78
parameter_list (91)
    on left: 82 83, on right: 80 82
pass (92)
    on left: 84 85, on right: 82 83
comp_statement (93)
    on left: 86, on right: 1 75 99
statements (94)
    on left: 87 88, on right: 86 87
statement (95)
    on left: 89 90, on right: 87 88 102 109 115 117 118 121
matched (96)
    on left: 91 92 93 94 95 96 97 98 99 100, on right: 89 101 103
matched_if_statement (97)
    on left: 101, on right: 92
unmatched (98)
    on left: 102 103, on right: 90 103
assignment (99)
    on left: 104 105, on right: 91
case_statement (100)
    on left: 106, on right: 93
cases (101)
    on left: 107 108, on right: 106 107
single_case (102)
    on left: 109 110, on right: 107 108
label_list (103)
    on left: 111 112, on right: 109 111
label (104)
    on left: 113 114, on right: 111 112
case_tail (105)
    on left: 115 116, on right: 106
while_statement (106)
    on left: 117, on right: 94
for_statement (107)
    on left: 118, on right: 95
iter_space (108)
    on left: 119 120, on right: 118
with_statement (109)
    on left: 121, on right: 96
subprogram_call (110)
    on left: 122 123, on right: 97
io_statement (111)
    on left: 124 125, on right: 98
read_list (112)
    on left: 126 127, on right: 124 126
read_item (113)
    on left: 128, on right: 126 127
write_list (114)
    on left: 129 130, on right: 125 129
write_item (115)
    on left: 131 132, on right: 129 130


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2
    header   go to state 3


state 1

    2 header: PROGRAM . ID SEMI

    ID  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: header . declarations subprograms comp_statement DOT

    CONST  shift, and go to state 6

    $default  reduce using rule 5 (constdefs)

    declarations  go to state 7
    constdefs     go to state 8


state 4

    2 header: PROGRAM ID . SEMI

    SEMI  shift, and go to state 9


state 5

    0 $accept: program $end .

    $default  accept


state 6

    4 constdefs: CONST . constant_defs SEMI

    ID  shift, and go to state 10

    constant_defs  go to state 11


state 7

    1 program: header declarations . subprograms comp_statement DOT

    $default  reduce using rule 71 (subprograms)

    subprograms  go to state 12


state 8

    3 declarations: constdefs . typedefs vardefs

    TYPE  shift, and go to state 13

    $default  reduce using rule 36 (typedefs)

    typedefs  go to state 14


state 9

    2 header: PROGRAM ID SEMI .

    $default  reduce using rule 2 (header)


state 10

    7 constant_defs: ID . EQU expression

    EQU  shift, and go to state 15


state 11

    4 constdefs: CONST constant_defs . SEMI
    6 constant_defs: constant_defs . SEMI ID EQU expression

    SEMI  shift, and go to state 16


state 12

    1 program: header declarations subprograms . comp_statement DOT
   70 subprograms: subprograms . subprogram SEMI

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    T_BEGIN    shift, and go to state 19

    subprogram      go to state 20
    sub_header      go to state 21
    comp_statement  go to state 22


state 13

   35 typedefs: TYPE . type_defs SEMI

    ID  shift, and go to state 23

    type_defs  go to state 24


state 14

    3 declarations: constdefs typedefs . vardefs

    VAR  shift, and go to state 25

    $default  reduce using rule 67 (vardefs)

    vardefs  go to state 26


state 15

    7 constant_defs: ID EQU . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 39
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 16

    4 constdefs: CONST constant_defs SEMI .
    6 constant_defs: constant_defs SEMI . ID EQU expression

    ID  shift, and go to state 43

    $default  reduce using rule 4 (constdefs)


state 17

   76 sub_header: FUNCTION . ID formal_parameters COLON standard_type
   77           | FUNCTION . ID formal_parameters COLON LIST
   79           | FUNCTION . ID

    ID  shift, and go to state 44


state 18

   78 sub_header: PROCEDURE . ID formal_parameters

    ID  shift, and go to state 45


state 19

   86 comp_statement: T_BEGIN . statements END

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statements            go to state 56
    statement             go to state 57
    matched               go to state 58
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 20

   70 subprograms: subprograms subprogram . SEMI

    SEMI  shift, and go to state 68


state 21

   72 subprogram: sub_header . SEMI FORWARD
   75           | sub_header . SEMI $@1 declarations $@2 subprograms comp_statement

    SEMI  shift, and go to state 69


state 22

    1 program: header declarations subprograms comp_statement . DOT

    DOT  shift, and go to state 70


state 23

   38 type_defs: ID . EQU type_def

    EQU  shift, and go to state 71


state 24

   35 typedefs: TYPE type_defs . SEMI
   37 type_defs: type_defs . SEMI ID EQU type_def

    SEMI  shift, and go to state 72


state 25

   66 vardefs: VAR . variable_defs SEMI

    ID  shift, and go to state 73

    identifiers    go to state 74
    variable_defs  go to state 75


state 26

    3 declarations: constdefs typedefs vardefs .

    $default  reduce using rule 3 (declarations)


state 27

   18 expression: LENGTH . LPAREN expression RPAREN

    LPAREN  shift, and go to state 76


state 28

   19 expression: NEW . LPAREN expression RPAREN

    LPAREN  shift, and go to state 77


state 29

   26 variable: LISTFUNC . LPAREN expression RPAREN

    LPAREN  shift, and go to state 78


state 30

   32 constant: CCONST .

    $default  reduce using rule 32 (constant)


state 31

   31 constant: BCONST .

    $default  reduce using rule 31 (constant)


state 32

   30 constant: RCONST .

    $default  reduce using rule 30 (constant)


state 33

   29 constant: ICONST .

    $default  reduce using rule 29 (constant)


state 34

   17 expression: ID . LPAREN expressions RPAREN
   23 variable: ID .

    LPAREN  shift, and go to state 79

    $default  reduce using rule 23 (variable)


state 35

   33 setlistexpression: LBRACK . expressions RBRACK
   34                  | LBRACK . RBRACK

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    RBRACK    shift, and go to state 80
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 82
    constant           go to state 41
    setlistexpression  go to state 42


state 36

   14 expression: ADDOP . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 83
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 37

   15 expression: NOTOP . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 84
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 38

   21 expression: LPAREN . expression RPAREN

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 85
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 39

    7 constant_defs: ID EQU expression .
    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 7 (constant_defs)


state 40

   16 expression: variable .
   24 variable: variable . DOT ID
   25         | variable . LBRACK expressions RBRACK

    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93

    $default  reduce using rule 16 (expression)


state 41

   20 expression: constant .

    $default  reduce using rule 20 (expression)


state 42

   22 expression: setlistexpression .

    $default  reduce using rule 22 (expression)


state 43

    6 constant_defs: constant_defs SEMI ID . EQU expression

    EQU  shift, and go to state 94


state 44

   76 sub_header: FUNCTION ID . formal_parameters COLON standard_type
   77           | FUNCTION ID . formal_parameters COLON LIST
   79           | FUNCTION ID .

    LPAREN  shift, and go to state 95

    COLON     reduce using rule 81 (formal_parameters)
    $default  reduce using rule 79 (sub_header)

    formal_parameters  go to state 96


state 45

   78 sub_header: PROCEDURE ID . formal_parameters

    LPAREN  shift, and go to state 95

    $default  reduce using rule 81 (formal_parameters)

    formal_parameters  go to state 97


state 46

  101 matched_if_statement: IF . expression THEN matched ELSE matched
  102 unmatched: IF . expression THEN statement
  103          | IF . expression THEN matched ELSE unmatched

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 98
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 47

  117 while_statement: WHILE . expression DO statement

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 99
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 48

  106 case_statement: CASE . expression OF cases case_tail END

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 100
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 49

  118 for_statement: FOR . ID ASSIGN iter_space DO statement

    ID  shift, and go to state 101


state 50

  121 with_statement: WITH . variable DO statement

    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 102

    variable  go to state 103


state 51

  124 io_statement: READ . LPAREN read_list RPAREN

    LPAREN  shift, and go to state 104


state 52

  125 io_statement: WRITE . LPAREN write_list RPAREN

    LPAREN  shift, and go to state 105


state 53

   23 variable: ID .
  122 subprogram_call: ID .
  123                | ID . LPAREN expressions RPAREN

    LPAREN  shift, and go to state 106

    END       reduce using rule 122 (subprogram_call)
    ELSE      reduce using rule 122 (subprogram_call)
    SEMI      reduce using rule 122 (subprogram_call)
    $default  reduce using rule 23 (variable)


state 54

   24 variable: variable . DOT ID
   25         | variable . LBRACK expressions RBRACK
  104 assignment: variable . ASSIGN expression
  105           | variable . ASSIGN STRING

    ASSIGN  shift, and go to state 107
    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93


state 55

   99 matched: comp_statement .

    $default  reduce using rule 99 (matched)


state 56

   86 comp_statement: T_BEGIN statements . END
   87 statements: statements . SEMI statement

    END   shift, and go to state 108
    SEMI  shift, and go to state 109


state 57

   88 statements: statement .

    $default  reduce using rule 88 (statements)


state 58

   89 statement: matched .

    $default  reduce using rule 89 (statement)


state 59

   92 matched: matched_if_statement .

    $default  reduce using rule 92 (matched)


state 60

   90 statement: unmatched .

    $default  reduce using rule 90 (statement)


state 61

   91 matched: assignment .

    $default  reduce using rule 91 (matched)


state 62

   93 matched: case_statement .

    $default  reduce using rule 93 (matched)


state 63

   94 matched: while_statement .

    $default  reduce using rule 94 (matched)


state 64

   95 matched: for_statement .

    $default  reduce using rule 95 (matched)


state 65

   96 matched: with_statement .

    $default  reduce using rule 96 (matched)


state 66

   97 matched: subprogram_call .

    $default  reduce using rule 97 (matched)


state 67

   98 matched: io_statement .

    $default  reduce using rule 98 (matched)


state 68

   70 subprograms: subprograms subprogram SEMI .

    $default  reduce using rule 70 (subprograms)


state 69

   72 subprogram: sub_header SEMI . FORWARD
   75           | sub_header SEMI . $@1 declarations $@2 subprograms comp_statement

    FORWARD  shift, and go to state 110

    $default  reduce using rule 73 ($@1)

    $@1  go to state 111


state 70

    1 program: header declarations subprograms comp_statement DOT .

    $default  reduce using rule 1 (program)


state 71

   38 type_defs: ID EQU . type_def

    ARRAY   shift, and go to state 112
    LIST    shift, and go to state 113
    SET     shift, and go to state 114
    RECORD  shift, and go to state 115
    CCONST  shift, and go to state 116
    BCONST  shift, and go to state 117
    ID      shift, and go to state 118
    ADDOP   shift, and go to state 119

    $default  reduce using rule 54 (sign)

    type_def  go to state 120
    limit     go to state 121
    sign      go to state 122


state 72

   35 typedefs: TYPE type_defs SEMI .
   37 type_defs: type_defs SEMI . ID EQU type_def

    ID  shift, and go to state 123

    $default  reduce using rule 35 (typedefs)


state 73

   65 identifiers: ID .

    $default  reduce using rule 65 (identifiers)


state 74

   64 identifiers: identifiers . COMMA ID
   69 variable_defs: identifiers . COLON typename

    COMMA  shift, and go to state 124
    COLON  shift, and go to state 125


state 75

   66 vardefs: VAR variable_defs . SEMI
   68 variable_defs: variable_defs . SEMI identifiers COLON typename

    SEMI  shift, and go to state 126


state 76

   18 expression: LENGTH LPAREN . expression RPAREN

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 127
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 77

   19 expression: NEW LPAREN . expression RPAREN

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 128
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 78

   26 variable: LISTFUNC LPAREN . expression RPAREN

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 129
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 79

   17 expression: ID LPAREN . expressions RPAREN

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 130
    constant           go to state 41
    setlistexpression  go to state 42


state 80

   34 setlistexpression: LBRACK RBRACK .

    $default  reduce using rule 34 (setlistexpression)


state 81

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   28 expressions: expression .

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 28 (expressions)


state 82

   27 expressions: expressions . COMMA expression
   33 setlistexpression: LBRACK expressions . RBRACK

    RBRACK  shift, and go to state 131
    COMMA   shift, and go to state 132


state 83

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   14           | ADDOP expression .

    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 14 (expression)


state 84

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   15           | NOTOP expression .

    $default  reduce using rule 15 (expression)


state 85

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   21           | LPAREN expression . RPAREN

    RPAREN       shift, and go to state 133
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 86

   10 expression: expression INOP . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 134
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 87

    8 expression: expression RELOP . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 135
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 88

    9 expression: expression EQU . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 136
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 89

   12 expression: expression ADDOP . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 137
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 90

   11 expression: expression OROP . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 138
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 91

   13 expression: expression MULDIVANDOP . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 139
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 92

   25 variable: variable LBRACK . expressions RBRACK

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 140
    constant           go to state 41
    setlistexpression  go to state 42


state 93

   24 variable: variable DOT . ID

    ID  shift, and go to state 141


state 94

    6 constant_defs: constant_defs SEMI ID EQU . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 142
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 95

   80 formal_parameters: LPAREN . parameter_list RPAREN

    VAR  shift, and go to state 143

    $default  reduce using rule 85 (pass)

    parameter_list  go to state 144
    pass            go to state 145


state 96

   76 sub_header: FUNCTION ID formal_parameters . COLON standard_type
   77           | FUNCTION ID formal_parameters . COLON LIST

    COLON  shift, and go to state 146


state 97

   78 sub_header: PROCEDURE ID formal_parameters .

    $default  reduce using rule 78 (sub_header)


state 98

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  101 matched_if_statement: IF expression . THEN matched ELSE matched
  102 unmatched: IF expression . THEN statement
  103          | IF expression . THEN matched ELSE unmatched

    THEN         shift, and go to state 147
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 99

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  117 while_statement: WHILE expression . DO statement

    DO           shift, and go to state 148
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 100

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  106 case_statement: CASE expression . OF cases case_tail END

    OF           shift, and go to state 149
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 101

  118 for_statement: FOR ID . ASSIGN iter_space DO statement

    ASSIGN  shift, and go to state 150


state 102

   23 variable: ID .

    $default  reduce using rule 23 (variable)


state 103

   24 variable: variable . DOT ID
   25         | variable . LBRACK expressions RBRACK
  121 with_statement: WITH variable . DO statement

    DO      shift, and go to state 151
    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93


state 104

  124 io_statement: READ LPAREN . read_list RPAREN

    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 102

    variable   go to state 152
    read_list  go to state 153
    read_item  go to state 154


state 105

  125 io_statement: WRITE LPAREN . write_list RPAREN

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    STRING    shift, and go to state 155
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 156
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42
    write_list         go to state 157
    write_item         go to state 158


state 106

  123 subprogram_call: ID LPAREN . expressions RPAREN

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 81
    variable           go to state 40
    expressions        go to state 159
    constant           go to state 41
    setlistexpression  go to state 42


state 107

  104 assignment: variable ASSIGN . expression
  105           | variable ASSIGN . STRING

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    STRING    shift, and go to state 160
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 161
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 108

   86 comp_statement: T_BEGIN statements END .

    $default  reduce using rule 86 (comp_statement)


state 109

   87 statements: statements SEMI . statement

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statement             go to state 162
    matched               go to state 58
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 110

   72 subprogram: sub_header SEMI FORWARD .

    $default  reduce using rule 72 (subprogram)


state 111

   75 subprogram: sub_header SEMI $@1 . declarations $@2 subprograms comp_statement

    CONST  shift, and go to state 6

    $default  reduce using rule 5 (constdefs)

    declarations  go to state 163
    constdefs     go to state 8


state 112

   39 type_def: ARRAY . LBRACK dims RBRACK OF typename

    LBRACK  shift, and go to state 164


state 113

   40 type_def: LIST . OF typename

    OF  shift, and go to state 165


state 114

   41 type_def: SET . OF typename

    OF  shift, and go to state 166


state 115

   42 type_def: RECORD . fields END

    ID  shift, and go to state 73

    fields       go to state 167
    field        go to state 168
    identifiers  go to state 169


state 116

   49 limit: CCONST .

    $default  reduce using rule 49 (limit)


state 117

   50 limit: BCONST .

    $default  reduce using rule 50 (limit)


state 118

   52 limit: ID .

    $default  reduce using rule 52 (limit)


state 119

   51 limit: ADDOP . ID
   53 sign: ADDOP .

    ID  shift, and go to state 170

    $default  reduce using rule 53 (sign)


state 120

   38 type_defs: ID EQU type_def .

    $default  reduce using rule 38 (type_defs)


state 121

   43 type_def: limit . DOTDOT limit

    DOTDOT  shift, and go to state 171


state 122

   48 limit: sign . ICONST

    ICONST  shift, and go to state 172


state 123

   37 type_defs: type_defs SEMI ID . EQU type_def

    EQU  shift, and go to state 173


state 124

   64 identifiers: identifiers COMMA . ID

    ID  shift, and go to state 174


state 125

   69 variable_defs: identifiers COLON . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 180
    standard_type  go to state 181


state 126

   66 vardefs: VAR variable_defs SEMI .
   68 variable_defs: variable_defs SEMI . identifiers COLON typename

    ID  shift, and go to state 73

    $default  reduce using rule 66 (vardefs)

    identifiers  go to state 182


state 127

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   18           | LENGTH LPAREN expression . RPAREN

    RPAREN       shift, and go to state 183
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 128

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   19           | NEW LPAREN expression . RPAREN

    RPAREN       shift, and go to state 184
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 129

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   26 variable: LISTFUNC LPAREN expression . RPAREN

    RPAREN       shift, and go to state 185
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 130

   17 expression: ID LPAREN expressions . RPAREN
   27 expressions: expressions . COMMA expression

    RPAREN  shift, and go to state 186
    COMMA   shift, and go to state 132


state 131

   33 setlistexpression: LBRACK expressions RBRACK .

    $default  reduce using rule 33 (setlistexpression)


state 132

   27 expressions: expressions COMMA . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 187
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 133

   21 expression: LPAREN expression RPAREN .

    $default  reduce using rule 21 (expression)


state 134

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   10           | expression INOP expression .
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression

    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    INOP   error (nonassociative)
    RELOP  error (nonassociative)
    EQU    error (nonassociative)

    $default  reduce using rule 10 (expression)


state 135

    8 expression: expression . RELOP expression
    8           | expression RELOP expression .
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression

    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    INOP   error (nonassociative)
    RELOP  error (nonassociative)
    EQU    error (nonassociative)

    $default  reduce using rule 8 (expression)


state 136

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
    9           | expression EQU expression .
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression

    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    INOP   error (nonassociative)
    RELOP  error (nonassociative)
    EQU    error (nonassociative)

    $default  reduce using rule 9 (expression)


state 137

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   12           | expression ADDOP expression .
   13           | expression . MULDIVANDOP expression

    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 12 (expression)


state 138

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   11           | expression OROP expression .
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression

    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 11 (expression)


state 139

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   13           | expression MULDIVANDOP expression .

    $default  reduce using rule 13 (expression)


state 140

   25 variable: variable LBRACK expressions . RBRACK
   27 expressions: expressions . COMMA expression

    RBRACK  shift, and go to state 188
    COMMA   shift, and go to state 132


state 141

   24 variable: variable DOT ID .

    $default  reduce using rule 24 (variable)


state 142

    6 constant_defs: constant_defs SEMI ID EQU expression .
    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 6 (constant_defs)


state 143

   84 pass: VAR .

    $default  reduce using rule 84 (pass)


state 144

   80 formal_parameters: LPAREN parameter_list . RPAREN
   82 parameter_list: parameter_list . SEMI pass identifiers COLON typename

    SEMI    shift, and go to state 189
    RPAREN  shift, and go to state 190


state 145

   83 parameter_list: pass . identifiers COLON typename

    ID  shift, and go to state 73

    identifiers  go to state 191


state 146

   76 sub_header: FUNCTION ID formal_parameters COLON . standard_type
   77           | FUNCTION ID formal_parameters COLON . LIST

    LIST     shift, and go to state 192
    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178

    standard_type  go to state 193


state 147

  101 matched_if_statement: IF expression THEN . matched ELSE matched
  102 unmatched: IF expression THEN . statement
  103          | IF expression THEN . matched ELSE unmatched

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statement             go to state 194
    matched               go to state 195
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 148

  117 while_statement: WHILE expression DO . statement

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statement             go to state 196
    matched               go to state 58
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 149

  106 case_statement: CASE expression OF . cases case_tail END

    ADDOP  shift, and go to state 197

    END       reduce using rule 110 (single_case)
    SEMI      reduce using rule 110 (single_case)
    $default  reduce using rule 54 (sign)

    sign         go to state 198
    cases        go to state 199
    single_case  go to state 200
    label_list   go to state 201
    label        go to state 202


state 150

  118 for_statement: FOR ID ASSIGN . iter_space DO statement

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 203
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42
    iter_space         go to state 204


state 151

  121 with_statement: WITH variable DO . statement

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statement             go to state 205
    matched               go to state 58
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 152

   24 variable: variable . DOT ID
   25         | variable . LBRACK expressions RBRACK
  128 read_item: variable .

    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93

    $default  reduce using rule 128 (read_item)


state 153

  124 io_statement: READ LPAREN read_list . RPAREN
  126 read_list: read_list . COMMA read_item

    RPAREN  shift, and go to state 206
    COMMA   shift, and go to state 207


state 154

  127 read_list: read_item .

    $default  reduce using rule 127 (read_list)


state 155

  132 write_item: STRING .

    $default  reduce using rule 132 (write_item)


state 156

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  131 write_item: expression .

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 131 (write_item)


state 157

  125 io_statement: WRITE LPAREN write_list . RPAREN
  129 write_list: write_list . COMMA write_item

    RPAREN  shift, and go to state 208
    COMMA   shift, and go to state 209


state 158

  130 write_list: write_item .

    $default  reduce using rule 130 (write_list)


state 159

   27 expressions: expressions . COMMA expression
  123 subprogram_call: ID LPAREN expressions . RPAREN

    RPAREN  shift, and go to state 210
    COMMA   shift, and go to state 132


state 160

  105 assignment: variable ASSIGN STRING .

    $default  reduce using rule 105 (assignment)


state 161

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  104 assignment: variable ASSIGN expression .

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 104 (assignment)


state 162

   87 statements: statements SEMI statement .

    $default  reduce using rule 87 (statements)


state 163

   75 subprogram: sub_header SEMI $@1 declarations . $@2 subprograms comp_statement

    $default  reduce using rule 74 ($@2)

    $@2  go to state 211


state 164

   39 type_def: ARRAY LBRACK . dims RBRACK OF typename

    CCONST  shift, and go to state 116
    BCONST  shift, and go to state 117
    ID      shift, and go to state 212
    ADDOP   shift, and go to state 119

    $default  reduce using rule 54 (sign)

    dims    go to state 213
    limits  go to state 214
    limit   go to state 215
    sign    go to state 122


state 165

   40 type_def: LIST OF . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 216
    standard_type  go to state 181


state 166

   41 type_def: SET OF . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 217
    standard_type  go to state 181


state 167

   42 type_def: RECORD fields . END
   61 fields: fields . SEMI field

    END   shift, and go to state 218
    SEMI  shift, and go to state 219


state 168

   62 fields: field .

    $default  reduce using rule 62 (fields)


state 169

   63 field: identifiers . COLON typename
   64 identifiers: identifiers . COMMA ID

    COMMA  shift, and go to state 124
    COLON  shift, and go to state 220


state 170

   51 limit: ADDOP ID .

    $default  reduce using rule 51 (limit)


state 171

   43 type_def: limit DOTDOT . limit

    CCONST  shift, and go to state 116
    BCONST  shift, and go to state 117
    ID      shift, and go to state 118
    ADDOP   shift, and go to state 119

    $default  reduce using rule 54 (sign)

    limit  go to state 221
    sign   go to state 122


state 172

   48 limit: sign ICONST .

    $default  reduce using rule 48 (limit)


state 173

   37 type_defs: type_defs SEMI ID EQU . type_def

    ARRAY   shift, and go to state 112
    LIST    shift, and go to state 113
    SET     shift, and go to state 114
    RECORD  shift, and go to state 115
    CCONST  shift, and go to state 116
    BCONST  shift, and go to state 117
    ID      shift, and go to state 118
    ADDOP   shift, and go to state 119

    $default  reduce using rule 54 (sign)

    type_def  go to state 222
    limit     go to state 121
    sign      go to state 122


state 174

   64 identifiers: identifiers COMMA ID .

    $default  reduce using rule 64 (identifiers)


state 175

   57 standard_type: INTEGER .

    $default  reduce using rule 57 (standard_type)


state 176

   58 standard_type: REAL .

    $default  reduce using rule 58 (standard_type)


state 177

   59 standard_type: BOOLEAN .

    $default  reduce using rule 59 (standard_type)


state 178

   60 standard_type: CHAR .

    $default  reduce using rule 60 (standard_type)


state 179

   56 typename: ID .

    $default  reduce using rule 56 (typename)


state 180

   69 variable_defs: identifiers COLON typename .

    $default  reduce using rule 69 (variable_defs)


state 181

   55 typename: standard_type .

    $default  reduce using rule 55 (typename)


state 182

   64 identifiers: identifiers . COMMA ID
   68 variable_defs: variable_defs SEMI identifiers . COLON typename

    COMMA  shift, and go to state 124
    COLON  shift, and go to state 223


state 183

   18 expression: LENGTH LPAREN expression RPAREN .

    $default  reduce using rule 18 (expression)


state 184

   19 expression: NEW LPAREN expression RPAREN .

    $default  reduce using rule 19 (expression)


state 185

   26 variable: LISTFUNC LPAREN expression RPAREN .

    $default  reduce using rule 26 (variable)


state 186

   17 expression: ID LPAREN expressions RPAREN .

    $default  reduce using rule 17 (expression)


state 187

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
   27 expressions: expressions COMMA expression .

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 27 (expressions)


state 188

   25 variable: variable LBRACK expressions RBRACK .

    $default  reduce using rule 25 (variable)


state 189

   82 parameter_list: parameter_list SEMI . pass identifiers COLON typename

    VAR  shift, and go to state 143

    $default  reduce using rule 85 (pass)

    pass  go to state 224


state 190

   80 formal_parameters: LPAREN parameter_list RPAREN .

    $default  reduce using rule 80 (formal_parameters)


state 191

   64 identifiers: identifiers . COMMA ID
   83 parameter_list: pass identifiers . COLON typename

    COMMA  shift, and go to state 124
    COLON  shift, and go to state 225


state 192

   77 sub_header: FUNCTION ID formal_parameters COLON LIST .

    $default  reduce using rule 77 (sub_header)


state 193

   76 sub_header: FUNCTION ID formal_parameters COLON standard_type .

    $default  reduce using rule 76 (sub_header)


state 194

  102 unmatched: IF expression THEN statement .

    $default  reduce using rule 102 (unmatched)


state 195

   89 statement: matched .
  101 matched_if_statement: IF expression THEN matched . ELSE matched
  103 unmatched: IF expression THEN matched . ELSE unmatched

    ELSE  shift, and go to state 226

    ELSE      [reduce using rule 89 (statement)]
    $default  reduce using rule 89 (statement)


state 196

  117 while_statement: WHILE expression DO statement .

    $default  reduce using rule 117 (while_statement)


state 197

   53 sign: ADDOP .

    $default  reduce using rule 53 (sign)


state 198

  113 label: sign . constant
  114      | sign . ID

    CCONST  shift, and go to state 30
    BCONST  shift, and go to state 31
    RCONST  shift, and go to state 32
    ICONST  shift, and go to state 33
    ID      shift, and go to state 227

    constant  go to state 228


state 199

  106 case_statement: CASE expression OF cases . case_tail END
  107 cases: cases . SEMI single_case

    SEMI  shift, and go to state 229

    $default  reduce using rule 116 (case_tail)

    case_tail  go to state 230


state 200

  108 cases: single_case .

    $default  reduce using rule 108 (cases)


state 201

  109 single_case: label_list . COLON statement
  111 label_list: label_list . COMMA label

    COMMA  shift, and go to state 231
    COLON  shift, and go to state 232


state 202

  112 label_list: label .

    $default  reduce using rule 112 (label_list)


state 203

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  119 iter_space: expression . TO expression
  120           | expression . DOWNTO expression

    TO           shift, and go to state 233
    DOWNTO       shift, and go to state 234
    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91


state 204

  118 for_statement: FOR ID ASSIGN iter_space . DO statement

    DO  shift, and go to state 235


state 205

  121 with_statement: WITH variable DO statement .

    $default  reduce using rule 121 (with_statement)


state 206

  124 io_statement: READ LPAREN read_list RPAREN .

    $default  reduce using rule 124 (io_statement)


state 207

  126 read_list: read_list COMMA . read_item

    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 102

    variable   go to state 152
    read_item  go to state 236


state 208

  125 io_statement: WRITE LPAREN write_list RPAREN .

    $default  reduce using rule 125 (io_statement)


state 209

  129 write_list: write_list COMMA . write_item

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    STRING    shift, and go to state 155
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 156
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42
    write_item         go to state 237


state 210

  123 subprogram_call: ID LPAREN expressions RPAREN .

    $default  reduce using rule 123 (subprogram_call)


state 211

   75 subprogram: sub_header SEMI $@1 declarations $@2 . subprograms comp_statement

    $default  reduce using rule 71 (subprograms)

    subprograms  go to state 238


state 212

   47 limits: ID .
   52 limit: ID .

    DOTDOT    reduce using rule 52 (limit)
    $default  reduce using rule 47 (limits)


state 213

   39 type_def: ARRAY LBRACK dims . RBRACK OF typename
   44 dims: dims . COMMA limits

    RBRACK  shift, and go to state 239
    COMMA   shift, and go to state 240


state 214

   45 dims: limits .

    $default  reduce using rule 45 (dims)


state 215

   46 limits: limit . DOTDOT limit

    DOTDOT  shift, and go to state 241


state 216

   40 type_def: LIST OF typename .

    $default  reduce using rule 40 (type_def)


state 217

   41 type_def: SET OF typename .

    $default  reduce using rule 41 (type_def)


state 218

   42 type_def: RECORD fields END .

    $default  reduce using rule 42 (type_def)


state 219

   61 fields: fields SEMI . field

    ID  shift, and go to state 73

    field        go to state 242
    identifiers  go to state 169


state 220

   63 field: identifiers COLON . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 243
    standard_type  go to state 181


state 221

   43 type_def: limit DOTDOT limit .

    $default  reduce using rule 43 (type_def)


state 222

   37 type_defs: type_defs SEMI ID EQU type_def .

    $default  reduce using rule 37 (type_defs)


state 223

   68 variable_defs: variable_defs SEMI identifiers COLON . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 244
    standard_type  go to state 181


state 224

   82 parameter_list: parameter_list SEMI pass . identifiers COLON typename

    ID  shift, and go to state 73

    identifiers  go to state 245


state 225

   83 parameter_list: pass identifiers COLON . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 246
    standard_type  go to state 181


state 226

  101 matched_if_statement: IF expression THEN matched ELSE . matched
  103 unmatched: IF expression THEN matched ELSE . unmatched

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    matched               go to state 247
    matched_if_statement  go to state 59
    unmatched             go to state 248
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 227

  114 label: sign ID .

    $default  reduce using rule 114 (label)


state 228

  113 label: sign constant .

    $default  reduce using rule 113 (label)


state 229

  107 cases: cases SEMI . single_case
  115 case_tail: SEMI . OTHERWISE COLON statement

    OTHERWISE  shift, and go to state 249
    ADDOP      shift, and go to state 197

    END       reduce using rule 110 (single_case)
    SEMI      reduce using rule 110 (single_case)
    $default  reduce using rule 54 (sign)

    sign         go to state 198
    single_case  go to state 250
    label_list   go to state 201
    label        go to state 202


state 230

  106 case_statement: CASE expression OF cases case_tail . END

    END  shift, and go to state 251


state 231

  111 label_list: label_list COMMA . label

    ADDOP  shift, and go to state 197

    $default  reduce using rule 54 (sign)

    sign   go to state 198
    label  go to state 252


state 232

  109 single_case: label_list COLON . statement

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statement             go to state 253
    matched               go to state 58
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 233

  119 iter_space: expression TO . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 254
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 234

  120 iter_space: expression DOWNTO . expression

    LENGTH    shift, and go to state 27
    NEW       shift, and go to state 28
    LISTFUNC  shift, and go to state 29
    CCONST    shift, and go to state 30
    BCONST    shift, and go to state 31
    RCONST    shift, and go to state 32
    ICONST    shift, and go to state 33
    ID        shift, and go to state 34
    LBRACK    shift, and go to state 35
    ADDOP     shift, and go to state 36
    NOTOP     shift, and go to state 37
    LPAREN    shift, and go to state 38

    expression         go to state 255
    variable           go to state 40
    constant           go to state 41
    setlistexpression  go to state 42


state 235

  118 for_statement: FOR ID ASSIGN iter_space DO . statement

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statement             go to state 256
    matched               go to state 58
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 236

  126 read_list: read_list COMMA read_item .

    $default  reduce using rule 126 (read_list)


state 237

  129 write_list: write_list COMMA write_item .

    $default  reduce using rule 129 (write_list)


state 238

   70 subprograms: subprograms . subprogram SEMI
   75 subprogram: sub_header SEMI $@1 declarations $@2 subprograms . comp_statement

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    T_BEGIN    shift, and go to state 19

    subprogram      go to state 20
    sub_header      go to state 21
    comp_statement  go to state 257


state 239

   39 type_def: ARRAY LBRACK dims RBRACK . OF typename

    OF  shift, and go to state 258


state 240

   44 dims: dims COMMA . limits

    CCONST  shift, and go to state 116
    BCONST  shift, and go to state 117
    ID      shift, and go to state 212
    ADDOP   shift, and go to state 119

    $default  reduce using rule 54 (sign)

    limits  go to state 259
    limit   go to state 215
    sign    go to state 122


state 241

   46 limits: limit DOTDOT . limit

    CCONST  shift, and go to state 116
    BCONST  shift, and go to state 117
    ID      shift, and go to state 118
    ADDOP   shift, and go to state 119

    $default  reduce using rule 54 (sign)

    limit  go to state 260
    sign   go to state 122


state 242

   61 fields: fields SEMI field .

    $default  reduce using rule 61 (fields)


state 243

   63 field: identifiers COLON typename .

    $default  reduce using rule 63 (field)


state 244

   68 variable_defs: variable_defs SEMI identifiers COLON typename .

    $default  reduce using rule 68 (variable_defs)


state 245

   64 identifiers: identifiers . COMMA ID
   82 parameter_list: parameter_list SEMI pass identifiers . COLON typename

    COMMA  shift, and go to state 124
    COLON  shift, and go to state 261


state 246

   83 parameter_list: pass identifiers COLON typename .

    $default  reduce using rule 83 (parameter_list)


state 247

  101 matched_if_statement: IF expression THEN matched ELSE matched .

    $default  reduce using rule 101 (matched_if_statement)


state 248

  103 unmatched: IF expression THEN matched ELSE unmatched .

    $default  reduce using rule 103 (unmatched)


state 249

  115 case_tail: SEMI OTHERWISE . COLON statement

    COLON  shift, and go to state 262


state 250

  107 cases: cases SEMI single_case .

    $default  reduce using rule 107 (cases)


state 251

  106 case_statement: CASE expression OF cases case_tail END .

    $default  reduce using rule 106 (case_statement)


state 252

  111 label_list: label_list COMMA label .

    $default  reduce using rule 111 (label_list)


state 253

  109 single_case: label_list COLON statement .

    $default  reduce using rule 109 (single_case)


state 254

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  119 iter_space: expression TO expression .

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 119 (iter_space)


state 255

    8 expression: expression . RELOP expression
    9           | expression . EQU expression
   10           | expression . INOP expression
   11           | expression . OROP expression
   12           | expression . ADDOP expression
   13           | expression . MULDIVANDOP expression
  120 iter_space: expression DOWNTO expression .

    INOP         shift, and go to state 86
    RELOP        shift, and go to state 87
    EQU          shift, and go to state 88
    ADDOP        shift, and go to state 89
    OROP         shift, and go to state 90
    MULDIVANDOP  shift, and go to state 91

    $default  reduce using rule 120 (iter_space)


state 256

  118 for_statement: FOR ID ASSIGN iter_space DO statement .

    $default  reduce using rule 118 (for_statement)


state 257

   75 subprogram: sub_header SEMI $@1 declarations $@2 subprograms comp_statement .

    $default  reduce using rule 75 (subprogram)


state 258

   39 type_def: ARRAY LBRACK dims RBRACK OF . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 263
    standard_type  go to state 181


state 259

   44 dims: dims COMMA limits .

    $default  reduce using rule 44 (dims)


state 260

   46 limits: limit DOTDOT limit .

    $default  reduce using rule 46 (limits)


state 261

   82 parameter_list: parameter_list SEMI pass identifiers COLON . typename

    INTEGER  shift, and go to state 175
    REAL     shift, and go to state 176
    BOOLEAN  shift, and go to state 177
    CHAR     shift, and go to state 178
    ID       shift, and go to state 179

    typename       go to state 264
    standard_type  go to state 181


state 262

  115 case_tail: SEMI OTHERWISE COLON . statement

    T_BEGIN   shift, and go to state 19
    IF        shift, and go to state 46
    WHILE     shift, and go to state 47
    CASE      shift, and go to state 48
    FOR       shift, and go to state 49
    WITH      shift, and go to state 50
    READ      shift, and go to state 51
    WRITE     shift, and go to state 52
    LISTFUNC  shift, and go to state 29
    ID        shift, and go to state 53

    $default  reduce using rule 100 (matched)

    variable              go to state 54
    comp_statement        go to state 55
    statement             go to state 265
    matched               go to state 58
    matched_if_statement  go to state 59
    unmatched             go to state 60
    assignment            go to state 61
    case_statement        go to state 62
    while_statement       go to state 63
    for_statement         go to state 64
    with_statement        go to state 65
    subprogram_call       go to state 66
    io_statement          go to state 67


state 263

   39 type_def: ARRAY LBRACK dims RBRACK OF typename .

    $default  reduce using rule 39 (type_def)


state 264

   82 parameter_list: parameter_list SEMI pass identifiers COLON typename .

    $default  reduce using rule 82 (parameter_list)


state 265

  115 case_tail: SEMI OTHERWISE COLON statement .

    $default  reduce using rule 115 (case_tail)
